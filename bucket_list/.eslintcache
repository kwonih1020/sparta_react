[{"/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/Progress.js":"1","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/redux/modules/bucket.js":"2","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/App.js":"3","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/BucketList.js":"4","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/index.js":"5","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/Detail.js":"6","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/NotFound.js":"7","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/redux/configStore.js":"8","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/firebase.js":"9"},{"size":1247,"mtime":1610122511776,"results":"10","hashOfConfig":"11"},{"size":4544,"mtime":1610764211517,"results":"12","hashOfConfig":"11"},{"size":5510,"mtime":1610762247118,"results":"13","hashOfConfig":"11"},{"size":1295,"mtime":1610121942893,"results":"14","hashOfConfig":"11"},{"size":817,"mtime":1609964936255,"results":"15","hashOfConfig":"11"},{"size":1583,"mtime":1610764921627,"results":"16","hashOfConfig":"11"},{"size":298,"mtime":1609945184369,"results":"17","hashOfConfig":"11"},{"size":468,"mtime":1610761053594,"results":"18","hashOfConfig":"11"},{"size":748,"mtime":1610130824188,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"79wbzn",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/Progress.js",["40","41","42","43","44"],"/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/redux/modules/bucket.js",["45"],"/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/App.js",["46","47","48"],"import React from \"react\";\n\nimport { withRouter } from \"react-router\";\nimport { Route, Switch } from \"react-router-dom\";\n\n// import [컴포넌트 명] from [컴포넌트가 있는 파일경로];\nimport BucketList from \"./BucketList\";\nimport styled from \"styled-components\";\nimport Detail from \"./Detail\";\nimport NotFound from \"./NotFound\";\n\n// 리덕스 스토어와 연결하기 위해 connect라는 친구를 호출할게요!\nimport {connect} from 'react-redux';\n// 리덕스 모듈에서 (bucket 모듈에서) 액션 생성 함수 두개를 가져올게요!\nimport {loadBucket, createBucket, loadBucketFB, addBucketFB} from './redux/modules/bucket';\nimport Progress from \"./Progress\";\n\n// firestore 가져오기\nimport { firestore } from \"./firebase\";\n\n// 이 함수는 스토어가 가진 상태값을 props로 받아오기 위한 함수예요.\nconst mapStateTopProps = (state) => ({\n  bucket_list: state.bucket.list,\n});\n\n// 이 함수는 값을 변화시키기 위한 액션 생성 함수를 props로 받아오기 위한 함수예요.\nconst mapDispatchToProps = (dispatch) => ({\n  load: () => {\n    dispatch(loadBucketFB());\n  },\n  create: (new_item) => {\n    console.log(new_item);\n    dispatch(addBucketFB(new_item));\n  }\n});\n\n// 클래스형 컴포넌트는 이렇게 생겼습니다!\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    // App 컴포넌트의 state를 정의해줍니다.\n    this.state = {\n     \n    };\n    // ref는 이렇게 선언합니다!\n    this.text = React.createRef();\n  }\n\n  componentDidMount() {\n\n    this.props.load();\n    // bucket에서 buckets로 이름 바꾸기! 그리고 대시보드를 확인해보세요!\n    // const bucket = firestore.collection(\"bucket2\");\n    // bucket.doc(\"bucket_item\").set({ text: \"수영 배우기\", compeleted: false });\n    \n    \n\n    // console.log(firestore);\n    // const bucket = firestore.collection('bucket');\n    // // 하나만 확인하기\n    // bucket\n    //   .doc(\"bucket_item1\")\n    //   .get()\n    //   .then((doc) => {\n    //     // .exists를 써서 데이터가 있는 지 없는 지 확인!\n    //     if(doc.exists){\n    //       // 데이터를 콘솔에 찍어보자!\n    //       console.log(doc.data());\n    //     }\n    //   });\n    // //전체 확인하기\n\t\t// bucket\n    //   .get()\n    //   .then((docs) => {\n    //     let bucket_data = [];\n    //     docs.forEach((doc) => {\n    //       // 도큐먼트 객체를 확인해보자!\n    //       console.log(doc);\n    //       // 도큐먼트 데이터 가져오기\n    //       console.log(doc.data());\n    //       // 도큐먼트 id 가져오기\n    //       console.log(doc.id);\n\n    //       if (doc.exists) {\n    //         bucket_data = [...bucket_data, { id: doc.id, ...doc.data() }];\n    //       }\n    //     });\n\n    //     console.log(bucket_data);\n    //   });\n\n    // 데이터 추가하기\n    // bucket.add({text: \"찬양 배우기\", compeleted: false}).then((docRef) => {\n    //   console.log(docRef);\n    //   console.log(docRef.id);\n    // });\n\n    // 데이터 수정하기\n    // bucket.doc(\"bucket_item1\").update({text: \"수영 배우기2\"});\n\n    // 데이터 삭제하기\n    // bucket.doc(\"bucket_item2\").delete().then(docRef => {\n    //   console.log(\"Deleted\")\n    // });\n}\n\n  addBucketList = () => {\n    const new_item = { text: this.text.current.value, compeleted: false};\n    this.props.create(new_item);\n  };\n\n  // 랜더 함수 안에 리액트 엘리먼트를 넣어줍니다!\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Title>내 버킷리스트</Title>\n          <Progress/>\n          <Line />\n          {/* 컴포넌트를 넣어줍니다. */}\n          {/* <컴포넌트 명 [props 명]={넘겨줄 것(리스트, 문자열, 숫자, ...)}/> */}\n          {/* Route 쓰는 법 2가지를 모두 써봅시다! */}\n          <Switch>\n            <Route path=\"/\" exact component={BucketList} />\n            <Route path=\"/detail/:index\" component={Detail} />\n            <Route component={NotFound} />\n          </Switch>\n        </Container>\n        {/* 인풋박스와 추가하기 버튼을 넣어줬어요. */}\n        <Input>\n          <input type=\"text\" ref={this.text} />\n          <button onClick={this.addBucketList}>추가하기</button>\n        </Input>\n\n        <button onClick={() => {\n          window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n        }}>위로가기</button>\n      </div>\n    );\n  }\n}\n\nconst Input = styled.div`\n  max-width: 350px;\n  min-height: 10vh;\n  background-color: #fff;\n  padding: 16px;\n  margin: 20px auto;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  & > * {\n    padding: 5px;\n  }\n\n  & input {\n    border-radius: 5px;\n    margin-right: 10px;\n    border: 1px solid #888;\n    width: 70%;\n    &:focus {\n      border: 1px solid #a673ff;\n    }\n  }\n\n  & button {\n    width: 25%;\n    color: #fff;\n    border: 1px solid #a673ff;\n    background-color: #a673ff;\n  }\n`;\n\n\nconst Container = styled.div`\n  max-width: 350px;\n  min-height: 60vh;\n  background-color: #fff;\n  padding: 16px;\n  margin: 20px auto;\n  border-radius: 5px;\n  border: 1px solid #ddd;\n`;\n\nconst Title = styled.h1`\n  color: #673ab7;\n  text-align: center;\n`;\n\nconst Line = styled.hr`\n  margin: 16px 0px;\n  border: 1px dotted #ddd;\n`;\n// withRouter 적용\n// connect로 묶어줬습니다!\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(App));\n","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/BucketList.js",["49"],"/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/index.js",[],"/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/Detail.js",["50","51","52"],"/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/NotFound.js",[],"/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/redux/configStore.js",["53"],"//configStore.js\nimport { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport bucket from \"./modules/bucket\";\nimport { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n\nconst middlewares = [thunk];\n\nconst enhancer = applyMiddleware(...middlewares);\nconst rootReducer = combineReducers({ bucket });\nconst store = createStore(rootReducer, enhancer);\n\nexport default store;\n","/Users/Iccck/ICK/스파르타코딩/sparta_react/bucket_list/src/firebase.js",[],{"ruleId":"54","severity":1,"message":"55","line":6,"column":10,"nodeType":"56","messageId":"57","endLine":6,"endColumn":21},{"ruleId":"54","severity":1,"message":"58","line":8,"column":10,"nodeType":"56","messageId":"57","endLine":8,"endColumn":22},{"ruleId":"54","severity":1,"message":"59","line":8,"column":24,"nodeType":"56","messageId":"57","endLine":8,"endColumn":36},{"ruleId":"54","severity":1,"message":"60","line":16,"column":7,"nodeType":"56","messageId":"57","endLine":16,"endColumn":15},{"ruleId":"61","severity":1,"message":"62","line":16,"column":43,"nodeType":"63","messageId":"64","endLine":16,"endColumn":45},{"ruleId":"61","severity":1,"message":"65","line":161,"column":54,"nodeType":"63","messageId":"66","endLine":161,"endColumn":56},{"ruleId":"54","severity":1,"message":"67","line":15,"column":9,"nodeType":"56","messageId":"57","endLine":15,"endColumn":19},{"ruleId":"54","severity":1,"message":"68","line":15,"column":21,"nodeType":"56","messageId":"57","endLine":15,"endColumn":33},{"ruleId":"54","severity":1,"message":"69","line":19,"column":10,"nodeType":"56","messageId":"57","endLine":19,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":6,"column":9,"nodeType":"56","messageId":"57","endLine":6,"endColumn":20},{"ruleId":"54","severity":1,"message":"70","line":3,"column":8,"nodeType":"56","messageId":"57","endLine":3,"endColumn":14},{"ruleId":"54","severity":1,"message":"58","line":11,"column":3,"nodeType":"56","messageId":"57","endLine":11,"endColumn":15},{"ruleId":"54","severity":1,"message":"59","line":12,"column":3,"nodeType":"56","messageId":"57","endLine":12,"endColumn":15},{"ruleId":"54","severity":1,"message":"71","line":2,"column":57,"nodeType":"56","messageId":"57","endLine":2,"endColumn":64},"no-unused-vars","'useDispatch' is defined but never used.","Identifier","unusedVar","'deleteBucket' is defined but never used.","'updateBucket' is defined but never used.","'goal_per' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.filter() expects a value to be returned at the end of arrow function.","expectedAtEnd","'loadBucket' is defined but never used.","'createBucket' is defined but never used.","'firestore' is defined but never used.","'styled' is defined but never used.","'compose' is defined but never used."]