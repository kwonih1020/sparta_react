[{"/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/App.js":"1","/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/Start.js":"2","/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/Score.js":"3","/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/Quiz.js":"4","/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/reportWebVitals.js":"5","/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/redux/configStore.js":"6","/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/SwipeItem.js":"7","/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/Message.js":"8"},{"size":1367,"mtime":1610048447689,"results":"9","hashOfConfig":"10"},{"size":2380,"mtime":1609972612947,"results":"11","hashOfConfig":"10"},{"size":2379,"mtime":1609972520641,"results":"12","hashOfConfig":"10"},{"size":2179,"mtime":1610048766422,"results":"13","hashOfConfig":"10"},{"size":362,"mtime":1608600379405,"results":"14","hashOfConfig":"10"},{"size":336,"mtime":1610048365642,"results":"15","hashOfConfig":"10"},{"size":5470,"mtime":1610049400223,"results":"16","hashOfConfig":"10"},{"size":2826,"mtime":1609973039644,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"7qis5f",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"23","messages":"24","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/App.js",["36"],"import logo from './logo.svg';\nimport './App.css';\nimport React from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\n\nimport Start from \"./Start\";\nimport Quiz from \"./Quiz\";\nimport Score from \"./Score\";\nimport Message from \"./Message\";\nimport Ranking from \"./Ranking\";\n\nimport { withRouter } from \"react-router\";\n// 리덕스 스토어와 연결하기 위해 connect라는 친구를 호출할게요!\nimport { connect } from \"react-redux\";\n\n// 이 함수는 스토어가 가진 상태값을 props로 받아오기 위한 함수예요.\nconst mapStateTopProps = (state) => ({\n  ...state,\n});\n\n// 이 함수는 값을 변화시키기 위한 액션 생성 함수를 props로 받아오기 위한 함수예요.\nconst mapDispatchToProps = (dispatch) => ({\n  load: () => {\n    \n  },\n  \n});\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n\n    this.state = {\n      \n    };\n  }\n\n  render () {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route path=\"/quiz\" component={Quiz} />\n          <Route path=\"/\" exact component={Start} />\n          <Route path=\"/score\" component={Score} />\n          <Route path=\"/message\" component={Message} />\n          <Route path=\"/ranking\" component={Ranking} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateTopProps, mapDispatchToProps)(withRouter(App));\n","/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/Start.js",["37"],"/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/Score.js",["38","39","40"],"import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport {addRank} from \"./redux/modules/rank\";\n\nconst Score = (props) => {\n  const name = useSelector((state) => state.quiz.name);\n  const score_texts = useSelector((state) => state.quiz.score_texts);\n\n  const answers = useSelector((state) => state.quiz.answers);\n\n  // 정답만 걸러내기\n  let correct = answers.filter((answer) => {\n    return answer;\n  });\n\n  // 점수 계산하기\n  let score = (correct.length / answers.length) * 100;\n\n  // 점수별로 텍스트를 띄워줄 준비!\n  let score_text = \"\";\n\n  // Object.keys는 딕셔너리의 키값을 배열로 만들어주는 친구예요!\n  Object.keys(score_texts).map((s, idx) => {\n    // 첫번째 텍스트 넣어주기\n    if (idx === 0) {\n      score_text = score_texts[s];\n    }\n    // 실제 점수와 기준 점수(키로 넣었던 점수) 비교해서 텍스트를 넣자!\n    score_text = parseInt(s) <= score ? score_texts[s] : score_text;\n  });\n\n  return (\n    <ScoreContainer>\n      <Text>\n        <span>{name}</span>\n        퀴즈에 <br />\n        대한 내 점수는?\n      </Text>\n      <MyScore>\n        <span>{score}</span>점<p>{score_text}</p>\n      </MyScore>\n\n      <Button\n        onClick={() => {\n          \n          props.history.push(\"/message\");\n        }}\n        outlined\n      >\n        {name}에게 한마디\n      </Button>\n    </ScoreContainer>\n  );\n};\n\nconst ScoreContainer = styled.div`\n  display: flex;\n  width: 100vw;\n  height: 100vh;\n  overflow: hidden;\n  padding: 16px;\n  box-sizing: border-box;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Text = styled.h1`\n  font-size: 1.5em;\n  margin: 0px;\n  line-height: 1.4;\n  & span {\n    background-color: #fef5d4;\n    padding: 5px 10px;\n    border-radius: 30px;\n  }\n`;\n\nconst MyScore = styled.div`\n  & span {\n    border-radius: 30px;\n    padding: 5px 10px;\n    background-color: #fef5d4;\n  }\n  font-weight: 600;\n  font-size: 2em;\n  margin: 24px;\n\n  & > p {\n    margin: 24px 0px;\n    font-size: 16px;\n    font-weight: 400;\n  }\n`;\nconst Button = styled.button`\n  padding: 8px 24px;\n  background-color: ${(props) => (props.outlined ? \"#ffffff\" : \"#dadafc\")};\n  border-radius: 30px;\n  margin: 8px;\n  border: 1px solid #dadafc;\n  width: 80vw;\n`;\n\nexport default Score;\n","/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/Quiz.js",["41","42","43"],"/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/reportWebVitals.js",[],"/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/redux/configStore.js",[],"/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/SwipeItem.js",["44","45","46","47","48","49"],"/Users/Iccck/ICK/스파르타코딩/sparta_react/friend_test/src/Message.js",["50"],{"ruleId":"51","severity":1,"message":"52","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":12},{"ruleId":"55","severity":1,"message":"56","line":39,"column":9,"nodeType":"57","endLine":42,"endColumn":11},{"ruleId":"51","severity":1,"message":"58","line":4,"column":23,"nodeType":"53","messageId":"54","endLine":4,"endColumn":34},{"ruleId":"51","severity":1,"message":"59","line":5,"column":9,"nodeType":"53","messageId":"54","endLine":5,"endColumn":16},{"ruleId":"60","severity":1,"message":"61","line":25,"column":41,"nodeType":"62","messageId":"63","endLine":25,"endColumn":43},{"ruleId":"60","severity":1,"message":"64","line":39,"column":26,"nodeType":"62","messageId":"65","endLine":39,"endColumn":28},{"ruleId":"60","severity":1,"message":"64","line":50,"column":26,"nodeType":"62","messageId":"65","endLine":50,"endColumn":28},{"ruleId":"51","severity":1,"message":"66","line":91,"column":7,"nodeType":"53","messageId":"54","endLine":91,"endColumn":15},{"ruleId":"67","severity":1,"message":"68","line":19,"column":22,"nodeType":"69","endLine":19,"endColumn":29},{"ruleId":"67","severity":1,"message":"70","line":21,"column":20,"nodeType":"71","endLine":26,"endColumn":8},{"ruleId":"67","severity":1,"message":"72","line":41,"column":26,"nodeType":"73","endLine":41,"endColumn":53},{"ruleId":"51","severity":1,"message":"74","line":128,"column":7,"nodeType":"53","messageId":"54","endLine":128,"endColumn":19},{"ruleId":"67","severity":1,"message":"75","line":146,"column":17,"nodeType":"53","endLine":146,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":152,"column":7,"nodeType":"57","endLine":152,"endColumn":24},{"ruleId":"55","severity":1,"message":"56","line":49,"column":9,"nodeType":"57","endLine":52,"endColumn":11},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useDispatch' is defined but never used.","'addRank' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","'DragItem' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'swipe_status' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","Literal","Assignments to the 'coordinate' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","ObjectExpression","Assignments to the 'target_classname' variable from inside React Hook React.useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside React.useEffect.","MemberExpression","'swipe_status' is assigned a value but never used.","The ref value 'swipe_div.current' will likely have changed by the time this effect cleanup function runs. If this ref points to a node rendered by React, copy 'swipe_div.current' to a variable inside the effect, and use that variable in the cleanup function."]